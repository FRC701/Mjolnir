#ifndef _ROBOT_H
#define _ROBOT_H

#include "WPILib.h"
#include "Commands/Command.h"
#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "Commands/AutonomousCommand.h"
#include "OI.h"
#include <PowerDistributionPanel.h>

class Robot : public IterativeRobot {
public:

  // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
  Robot();

	virtual void RobotInit();
	virtual void DisabledInit();
	virtual void DisabledPeriodic();
	virtual void AutonomousInit();
	virtual void AutonomousPeriodic();
	virtual void TeleopInit();
	virtual void TeleopPeriodic();
	virtual void TestPeriodic();
private:
	static std::unique_ptr<OI> oi;
	std::unique_ptr<Command> autonomousCommand;
	LiveWindow *lw = LiveWindow::GetInstance();
	frc::SendableChooser<frc::Command*>* chooser;
	PowerDistributionPanel mPdp;
	Timer rumbler;
	bool rumbled;
	bool rumbling;

	void Rumbling();
};
#endif
